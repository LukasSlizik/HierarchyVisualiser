<UserControl x:Class="HierarchyVisualiser.Views.ClassView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:behaviors="clr-namespace:HierarchyVisualiser.Behaviors"
             xmlns:local="clr-namespace:HierarchyVisualiser.Views"
             xmlns:viewModels="clr-namespace:HierarchyVisualiser.ViewModels"
             xmlns:controls="clr-namespace:HierarchyVisualiser.Controls"
             xmlns:converters="clr-namespace:HierarchyVisualiser.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             SizeChanged="OnSizeChanged">

    <UserControl.Resources>
        <ResourceDictionary>
            <DataTemplate x:Key="ClassMemberTemplate" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Image Source="..\Icons\method.png" Grid.Column="0" x:Name="methodIcon"/>
                    <Image Source="..\Icons\property.jpg" Grid.Column="0" x:Name="propertyIcon" />
                    <TextBlock Text="{Binding Info}" Grid.Column="1"/>
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding MemberType}" Value="Method">
                        <Setter TargetName="methodIcon" Property="Visibility" Value="Visible" />
                        <Setter TargetName="propertyIcon" Property="Visibility" Value="Hidden" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding MemberType}" Value="Property">
                        <Setter TargetName="methodIcon" Property="Visibility" Value="Hidden" />
                        <Setter TargetName="propertyIcon" Property="Visibility" Value="Visible" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <ControlTemplate x:Key="CustomToggleButton" TargetType="{x:Type ToggleButton}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="100"/>
                    </Grid.ColumnDefinitions>
                    <Ellipse Name="Circle"
                             ClipToBounds="True"
                             Grid.Column="0"
                             Fill="Transparent"
                             Stroke="Transparent"
                             Width="20"
                             Height="20"
                             VerticalAlignment="Top"/>
                    <Path x:Name="Arrow" 
                          Stroke="DarkGray" 
                          Fill="DarkGray"
                          VerticalAlignment="Top"
                          StrokeThickness="1" 
                          Grid.Column="0" 
                          Data="M 12,5 L 6,10 L 12,15 Z"></Path>
                    <ContentPresenter x:Name="HeaderContent" Grid.Column="1" Margin="5 0 5 0" ContentSource="Content" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Data" TargetName="Arrow" Value="M 8,5 L 14,10 L 8,15 Z"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Fill" Value="WhiteSmoke"  TargetName="Circle"/>
                        <Setter Property="StrokeThickness" Value="1.5" TargetName="Circle"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="true">
                        <Setter Property="StrokeThickness" Value="2" TargetName="Circle"/>
                        <Setter Property="Fill" Value="Black" TargetName="Arrow"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="CustomExpander" TargetType="{x:Type Expander}">
                <DockPanel>
                    <ToggleButton x:Name="ExpanderButton" 
                                  DockPanel.Dock="Left" 
                                  Margin="5 10 5 10"
                                  Background="{TemplateBinding Background}"
                                  Content="{TemplateBinding Header}"
                                  Template="{StaticResource CustomToggleButton}"
                                  IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                  BorderBrush="{TemplateBinding BorderBrush}" 
                                  BorderThickness="{TemplateBinding BorderThickness}" 
                                  VerticalContentAlignment="Top">
                    </ToggleButton>
                    <ContentPresenter Grid.Column="2" x:Name="ExpanderContent" DockPanel.Dock="Right" Visibility="Collapsed" ContentSource="Content"/>
                </DockPanel>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsExpanded" Value="True">
                        <Setter TargetName="ExpanderContent" Property="Visibility" Value="Visible" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <CollectionViewSource x:Key="Members" Source="{Binding Members}" >
                <CollectionViewSource.GroupDescriptions>
                    <PropertyGroupDescription PropertyName="MemberType" />
                </CollectionViewSource.GroupDescriptions>
            </CollectionViewSource>
        </ResourceDictionary>
    </UserControl.Resources>

    <controls:MyThumb behaviors:ThumbDragBehavior.ThumbCanBeDragged="True">
        <controls:MyThumb.Template>
            <ControlTemplate>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <Border BorderBrush="DarkGray" BorderThickness="2" CornerRadius="5" Tag="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainView}}}" Grid.Row="1">
                        <Border.ContextMenu>
                            <ContextMenu StaysOpen="true">
                                <MenuItem Header="Show Base" Command="{Binding PlacementTarget.Tag.ShowBaseCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}" CommandParameter="{Binding}"/>
                                <MenuItem Header="Show Interfaces" Command="{Binding PlacementTarget.Tag.ShowInterfacesCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}" CommandParameter="{Binding}"/>
                            </ContextMenu>
                        </Border.ContextMenu>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0" Text="{Binding ClassName}" Margin="5"  />
                            <ItemsControl Grid.Row="1" ItemsSource="{Binding Source={StaticResource Members}}" >
                                <ItemsControl.GroupStyle>
                                    <GroupStyle>
                                        <GroupStyle.ContainerStyle>
                                            <Style TargetType="{x:Type GroupItem}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type GroupItem}">
                                                            <Expander Grid.Row="2" Header="{Binding Name}" Template="{StaticResource CustomExpander}">
                                                                <ListBox ItemsSource="{Binding Items}" BorderThickness="0 1 0 0" Margin="5" ItemTemplate="{StaticResource ClassMemberTemplate}"  />
                                                            </Expander>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </GroupStyle.ContainerStyle>
                                    </GroupStyle>
                                </ItemsControl.GroupStyle>
                            </ItemsControl>
                        </Grid>
                    </Border>
                </Grid>
            </ControlTemplate>
        </controls:MyThumb.Template>
    </controls:MyThumb>
</UserControl> 